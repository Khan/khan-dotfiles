################################################################################
# Khan Academy specific .zprofile
#
# The difference between .zprofile and .profile is that the latter
# is called for all sh-compatible shells.  So we put zshisms here
# and non-zshisms in .profile.
#
# The zsh shell does not load .profile itself, so we have to source
# .profile here.

# Add homebrew to path on M1 macs
if [ `uname -m` = "arm64" ]; then
    export PATH=/opt/homebrew/bin:$PATH
fi

if [ -z "$KA_DOTFILES_PROFILE_SOURCED" ]; then
   # We check and then set this environment variable to ensure that we source
   # .profile only once.  Depending on a user's dotfile configuration, it
   # might otherwise be possible to create an infinite loop of sourcing.
   export KA_DOTFILES_PROFILE_SOURCED=1
   if [ -s ~/.profile ]; then
      source ~/.profile
   fi
fi
unset KA_DOTFILES_PROFILE_SOURCED

# Figure out what directory we're *really* in (following symlinks).
# We need this because *-completion.bash are siblings to this script.
# https://stackoverflow.com/questions/9901210/bash-source0-equivalent-in-zsh
SOURCE="${(%):-%N}"
while [ -h "$SOURCE" ]; do   # follow symlinks
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"    # resolve relative symlink
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Enable autocompletion for git. Should use git-completion.zsh, but it seems problematic on mac
autoload -Uz compinit && compinit
source "$DIR/git-completion.bash"

# Similarly for gcloud, if available
if ! which gcloud >/dev/null; then
    GCLOUD_COMPLETION_FILE="$(basename "$(basename gcloud)")/completion.bash.inc"
    if [ -f "$GCLOUD_COMPLETION_FILE" ]; then
        source "$GCLOUD_COMPLETION_FILE"
    fi
fi

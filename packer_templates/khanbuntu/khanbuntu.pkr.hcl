# khanbuntu VM specification
#
# This file is in HCL format.
# See https://www.packer.io/docs

variable "box_basename" {
  type    = string
  default = "khanbuntu-20.04"
  description = "Name of vagrant box we are building"
}

variable "build_directory" {
  type        = string
  default     = "builds"
  description = "Where to put box once it is built"
}

variable "cpus" {
  type        = number
  default     = 2
  description = "Default number of cores to allocate to box"
}

variable "memory" {
  type        = number
  default     = "2048"
  description = "Default MB to allocate to box"
}

variable "disk_size" {
  type        = number
  default     = "20480"
  description = "MB to size root (/) of virtual disk. Disk will not expand beyond this."
}

variable "git_revision" {
  type    = string
  default = "__unknown_git_revision__"
}

variable "guest_additions_url" {
  type    = string
  default = ""
}

variable "headless" {
  type    = bool
  default = "false"
}

variable "iso_checksum" {
  type    = string
  default = "f11bda2f2caed8f420802b59f382c25160b114ccc665dbac9c5046e7fceaced2"
}

variable "iso_name" {
  type    = string
  default = "ubuntu-20.04.1-legacy-server-amd64.iso"
}

variable "mirror" {
  type    = string
  default = "http://cdimage.ubuntu.com"
}

variable "mirror_directory" {
  type    = string
  default = "ubuntu-legacy-server/releases/20.04.1/release"
}

variable "name" {
  type    = string
  default = "ubuntu-20.04"
}

variable "preseed_path" {
  type    = string
  default = "preseed.cfg"
}

variable "template" {
  type    = string
  default = "ubuntu-20.04-amd64"
}

variable "setup_path" {
  type        = string
  default     = "/usr/local/var/packer"
  description = "Where to place files during packer build"
}

# "timestamp" template function replacement
locals {
  timestamp = regex_replace(timestamp(), "[- TZ:]", "")
  # TODO(ericbrown): conviert timestamp to localtime
  bldstamp = formatdate("YYYYMMDDhhmm", timestamp())
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/from-1.5/blocks/source

source "virtualbox-iso" "autogenerated_1" {
  boot_command            = ["<esc><wait>", "<esc><wait>", "<enter><wait>", "/install/vmlinuz<wait>", " auto<wait>", " console-setup/ask_detect=false<wait>", " console-setup/layoutcode=us<wait>", " console-setup/modelcode=pc105<wait>", " debconf/frontend=noninteractive<wait>", " debian-installer=en_US.UTF-8<wait>", " fb=false<wait>", " initrd=/install/initrd.gz<wait>", " kbd-chooser/method=us<wait>", " keyboard-configuration/layout=USA<wait>", " keyboard-configuration/variant=USA<wait>", " locale=en_US.UTF-8<wait>", " netcfg/get_domain=vm<wait>", " netcfg/get_hostname=vagrant<wait>", " grub-installer/bootdev=/dev/sda<wait>", " noapic<wait>", " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.preseed_path}<wait>", " -- <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  cpus                    = "${var.cpus}"
  disk_size               = "${var.disk_size}"
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_additions_url     = "${var.guest_additions_url}"
  guest_os_type           = "Ubuntu_64"
  hard_drive_interface    = "sata"
  headless                = "${var.headless}"
  http_directory          = "${path.root}/http"
  iso_checksum            = "${var.iso_checksum}"
  iso_url                 = "${var.mirror}/${var.mirror_directory}/${var.iso_name}"
  memory                  = "${var.memory}"
  output_directory        = "${var.build_directory}/packer-${var.template}-virtualbox"
  shutdown_command        = "echo 'vagrant' | sudo -S shutdown -P now"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_timeout             = "10000s"
  ssh_username            = "vagrant"
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "${var.template}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  # Build basic VM from ISO file. (see params above)
  sources = ["source.virtualbox-iso.autogenerated_1"]

  # Create welcome message with variables from here
  provisioner "shell" {
    execute_command   = "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'"
    inline = [
      "install -m 0777 -d ${var.setup_path}",
      "echo 'This system is for Khan Academy developers. Build ${local.bldstamp}.' > ${var.setup_path}/khanmotd.txt",
      "echo 'For help, contact @dev-support on slack' >> ${var.setup_path}/khanmotd.txt",
    ]
  }

  # Copy Khan Academy specific requirements to /tmp (no detectable IP)
  # These are used by 220-khan-vagrant-setup.sh
  provisioner "file" {
    sources = [
      "${path.root}/../../linux-functions.sh",
      "${path.root}/../../shared-functions.sh",
      "${path.root}/../../.profile.khan",
      "${path.root}/scripts",
    ]
    destination = "${var.setup_path}/"
  }

  # 100-199 Initial provisioning (not Khan specific)
  # 200-299 Run Khan Academy specific provisioning (no detectable IP)
  # 800-899 Clean up stuff we used during provisioning so that we can lighten the
  #         size of the VM box people will need to download.
  provisioner "shell" {
    environment_vars  = ["HOME_DIR=/home/vagrant", "BUILD_STAMP=${local.bldstamp}"]
    execute_command   = "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'"
    expect_disconnect = true
    scripts           = [
      "${path.root}/scripts/01-update.sh",
      "${path.root}/scripts/05-run-numbered-scripts.sh",
    ]
  }

  # Write the box out
  post-processor "vagrant" {
    output = "${var.build_directory}/${var.box_basename}.${local.bldstamp}.{{.Provider}}.box"
    vagrantfile_template = "${path.root}/Vagrantfile"
  }
}

[core]
  # KA specific global .gitignore file
  excludesfile = ~/.gitignore.khan

[branch]
  # autosetupmerge auto-adds the --track flag to each git branch,
  # which is helpful for arc (part of Phabricator).  autosetuprebase
  # means that instead of merging it will rebase.  Weird you need both!
  autosetupmerge = always
  autosetuprebase = always

[alias]
  # Versions of commands that handle submodules properly.
  co = "!f() { git checkout \"$@\" && git submodule update --init --recursive; }; f"
  p = "!f() { git pull \"$@\" && git submodule update --init --recursive; }; f"
  m = "!f() { git merge \"$@\" && git submodule update --init --recursive; }; f"
  gsu = "!f() { git submodule sync --recursive && git submodule update --init --recursive; }; f"

  # Branch management for dealing with phabricator and github-style deploys.
  # e.g. deploy-branch, review-branch, find-reviewers
  # Note that these reference scripts from Khan/git-workflow
  # Those scripts should be installed and part of the default path.
  phabricator-branch = !git review-branch
  rgrep = !git recursive-grep
  findreviewers = !git find-reviewers ; old-style had no dash in name

  # Abbreviations for KA specific tools
  db = !git deploy-branch
  rb = !git review-branch
  pb = !git review-branch       ; short for 'phabricator branch'

  # Other useful commands.
  outgoing = "!git fetch >/dev/null 2>&1; git log @{upstream}..HEAD"
  incoming = "!git fetch >/dev/null 2>&1; git log HEAD..@{upstream}"
  update-submodule = !bash -c 'git pull --no-rebase && pushd $1 && git co master && git pull && popd && git commit ${1%/} -m Substate\\ for\\ ${1%/} -m Test\\ plan: -m None && git push' --

  # For after a commit fails with lint, and it says 'commit message saved...'
  recommit = "!git commit -F \"`git rev-parse --git-dir`\"/commit.save"
  weekly = "!git log --author=$USER --since=`date -d last\\ monday +%Y/%m/%d`"

  # Versions of commands with useful options specified.
  graph = log --graph --decorate --oneline --pretty=format:"%h%x20%Cgreen%d%x20%Cred%an%x20%Cblue%ad%x20%Creset%s" --all --full-history --date=short
  ls-ignored = ls-files --exclude-standard --ignored --others
  conflicts = diff --name-only --diff-filter=U

[commit]
  template = ~/.git_template/commit_template

[init]
  templatedir = ~/.git_template

[push]
  default = simple

# These next three sections allow us to use the 'git-bigfile' extension.
[filter "bigfile"]
  clean = git-bigfile filter-clean
  smudge = git-bigfile filter-smudge

[git-bigfile]
  transport = s3

[git-bigfile "s3"]
  access-key = AKIAINDGZSNJIWXDPTSA
  secret-key-path = ~/git-bigfile-storage.secret
  bucket-name = git-bigfile-storage
